Parsybone (Parameter Synthesizer for Boolean Networks) Release v1.000, 7.10.2012
Copyright (C) 2012 - Adam Streck
Systems Biology Laboratory of Masaryk University, Brno ( http://sybila.fi.muni.cz )
open-source 2012, GNU GPL v3, uses:
	Boost Libraries ( http://www.boost.org/ )
	RapidXML ( see http://rapidxml.sourceforge.net/ )

This is a Release v1.000 of the Parsybone tool. For the newest version check either development tree ( https://github.com/sybila/Parsybone ) or web pages ( http://sybila.fi.muni.cz/tools )

Contents of the archive:
	auxiliary, construction, parsing, synthesis: header files of the program
	main.cpp: source file of the program
	manual_v_1_0_0_0.pdf: user manual for the program
	example_model.dbm: simple example model for usage with the tool, referenced in the manual
	reference_v_1_0_0_0.pdf: source code description in the pdf file form
	reference_v_1_0_0_0_HTML: source code description in the form of HTML we pages.

Requirements:
	GCC v4.5.0 or Microsoft Visual C++ Compiler 10.0
	Boost libraries v1.4.4
	
Building:
	Apart from the boost libraries there are no additional dependencies. Using the g++ one should currently specify usage of C++11 (-std=c++0x parameter).

Execution:
	Parsybone model_file.dbm [-rsvwW] [-d process_ID number_of_processes] [-f results_file] [-m input_mask_file] [-M output_mask_file]

	model_file.dbm	name of the file that will be parsed and used, must have .dbm suffix
	
	-r	display robustness of a color
	-s	show statistics
	-v	use verbose output
	-w	show witnesses in with numbers of states
	-W 	show witnesses in with actual values of states
	
	-d #num1 #num2	Used for distributed computation - process will compute only part of the parameter space as given in the second number, first number determines which part it is
	-f #filename	Name of the file that will store the results.
	-m #filename	Name of the file that holds bitmask for used colors
	-M #filename	Name of the file to output bitmask from this computation

Output:
	Data from the "verbose" stream are printed on lines starting with * 
	Data from the "statistics" stream are printed on lines starting with #
	Data from the "error" stream are printed on lines starting with !
	
	Results are printed without prefix in the form:
	acceptable_parametrization_number:actual_parametrization_values:[cost]:[robustness_value]:[{time_series_walks_transitions}]
